# generated by mBlock5 for CyberPi
# codes make you happy

import random, cyberpi, event, time

@event.start
def on_start():
    """该程序需要上传后执行才能获得最佳效果。"""
    if cyberpi.get_language() == 'chinese':
        cyberpi.console.println('光影音量柱')
        cyberpi.console.println(' ')
        cyberpi.console.println('按下 B 开始游戏')
    else:
        cyberpi.console.set_font(12)
        cyberpi.console.println('The Voice Show')
        cyberpi.console.println(' ')
        cyberpi.console.println('Press B to start')

    while not cyberpi.controller.is_press('b'):
        cyberpi.display.set_brush(random.randint(1, 255),
                                  random.randint(1, 255),
                                  random.randint(1, 255))
        # 直到按钮按下前，提示文本的颜色都将随机变化。
        cyberpi.console.print('')
        time.sleep(0.1)

    cyberpi.broadcast('消息1')


@event.receive('消息1')
def on_receive():
    """屏幕会通过柱状图来显示实时音量大小，放首歌看看吧。
    灯条的亮度也会随之变化哦~"""
    cyberpi.led.on(114, 0, 255, 1)
    cyberpi.led.on(191, 0, 255, 2)
    cyberpi.led.on(255, 0, 195, 3)
    cyberpi.led.on(255, 0, 72, 4)
    cyberpi.led.on(255, 0, 0, 5)

    while True:
        cyberpi.led.set_bri(cyberpi.get_loudness("maximum"))

        cyberpi.display.set_brush(114, 0, 255)
        cyberpi.barchart.add(cyberpi.get_loudness("maximum"))
        time.sleep(0.02)

        cyberpi.display.set_brush(191, 0, 255)
        cyberpi.barchart.add(cyberpi.get_loudness("maximum"))
        time.sleep(0.02)

        cyberpi.display.set_brush(255, 0, 195)
        cyberpi.barchart.add(cyberpi.get_loudness("maximum"))
        time.sleep(0.02)

        cyberpi.display.set_brush(255, 0, 72)
        cyberpi.barchart.add(cyberpi.get_loudness("maximum"))
        time.sleep(0.02)

        cyberpi.display.set_brush(255, 24, 24)
        cyberpi.barchart.add(cyberpi.get_loudness("maximum"))
        time.sleep(0.05)
