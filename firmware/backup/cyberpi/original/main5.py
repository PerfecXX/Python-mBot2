# generated by mBlock5 for CyberPi
# codes make you happy

import event, time, cyberpi

# initialize variables
player = 0
score = 0
size = 0
title = 0

title = cyberpi.sprite()
player = cyberpi.sprite()
score = cyberpi.sprite()

@event.start
def on_start():
    global player, score, size, title

    if cyberpi.get_language() == 'chinese':
        chinese()
    else:
        english()

def chinese():
    global player, score, size, title

    cyberpi.background.fill(0, 0, 0)
    size = 800
    title.draw_text('找到绿色')
    title.set_brush(105, 255, 5)

    player.draw_pixels([...])  # pixel data omitted for brevity
    player.set_size(size)

    score.draw_pixels([...])  # pixel data omitted for brevity
    score.move_random()

    while not size == 100:
        player.move_to((64 + cyberpi.get_roll() * 2), (64 + cyberpi.get_pitch() * 2))
        cyberpi.screen.render()

        if player.is_touch(score):
            size += -20
            player.set_size(size)
            cyberpi.audio.play('score')
            score.move_random()

    cyberpi.audio.play_until('start')
    title.draw_text('胜利！')
    title.set_brush(255, 163, 5)
    cyberpi.screen.render()
    time.sleep(3)
    title.draw_text('得分' + str(cyberpi.timer.get() - 3) + '秒')
    title.set_brush(255, 163, 5)
    cyberpi.screen.render()

def english():
    global player, score, size, title

    cyberpi.background.fill(0, 0, 0)
    size = 800
    title.draw_text('Find Green')
    title.set_brush(105, 255, 5)

    player.draw_pixels([...])  # pixel data omitted for brevity
    player.set_size(size)

    score.draw_pixels([...])  # pixel data omitted for brevity
    score.move_random()

    while not size == 100:
        player.move_to((64 + cyberpi.get_roll() * 2), (64 + cyberpi.get_pitch() * 2))
        cyberpi.screen.render()

        if player.is_touch(score):
            size += -20
            player.set_size(size)
            cyberpi.audio.play('score')
            score.move_random()

    cyberpi.audio.play_until('start')
    title.draw_text('You Win!!!')
    title.set_brush(255, 163, 5)
    cyberpi.screen.render()
    time.sleep(3)
    title.draw_text('Score:' + str(cyberpi.timer.get() - 3) + 's')
    title.set_brush(255, 163, 5)
    cyberpi.screen.render()
